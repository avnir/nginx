server {
    listen 80;
    server_name "~^www\.(.*)$" ;
    return 301 http://$1$request_uri ;
}

server {
    listen 80 default_server backlog=2048;
    listen [::]:80 default_server ipv6only=on;

    root /var/www/public;
    index index.php index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    #access_log /var/log/nginx/site-access.log;
    access_log off;
    log_not_found off;
    error_log  /var/log/nginx/site-error.log error;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    
    client_max_body_size 2M;
    client_body_buffer_size 1m;
    client_body_timeout 15;
    client_header_timeout 15;
    keepalive_timeout 2 2;
    send_timeout 15;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # pass the PHP scripts to php5-fpm
    # Note: \.php$ is susceptible to file upload attacks
    # Consider using: "location ~ ^/(index|app|app_dev|config)\.php(/|$) {"
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
     
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_pass FPM_PORT_9000_TCP_ADDR:9000;
        fastcgi_index index.php;
        include fastcgi_params;

        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        
        fastcgi_buffer_size 32k;
        fastcgi_buffers 4 32k;
        fastcgi_busy_buffers_size 64k;
        fastcgi_temp_file_write_size 64k;

        fastcgi_intercept_errors off;
        # include fastcgi.conf;
        fastcgi_param HTTPS off;
        fastcgi_read_timeout 100;

        fastcgi_cache_bypass 1;
        fastcgi_cache microcache;
        fastcgi_cache_key $scheme$host$request_uri$request_method;
        fastcgi_cache_valid any 8m;
        fastcgi_cache_bypass $http_pragma;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500;
    }

    # Client Caching
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        access_log          off;
        log_not_found       off;
        expires             30d;
    }

    # Deny .htaccess file access
    location ~ /\.ht {
        access_log          off;
        log_not_found       off;
        deny                all;
    }
}